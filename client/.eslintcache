[{"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/index.js":"1","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/App.js":"2","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/reportWebVitals.js":"3","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/UserContext.js":"4","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/pages/home/index.js":"5","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/pages/chat/index.js":"6","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/components/Navbar.js":"7","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/components/RoomList.js":"8","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/components/Message.js":"9"},{"size":478,"mtime":1610174096467,"results":"10","hashOfConfig":"11"},{"size":665,"mtime":1610179053569,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610172984349,"results":"13","hashOfConfig":"11"},{"size":87,"mtime":1610173891697,"results":"14","hashOfConfig":"11"},{"size":3306,"mtime":1610284510340,"results":"15","hashOfConfig":"11"},{"size":1774,"mtime":1610284389669,"results":"16","hashOfConfig":"11"},{"size":1158,"mtime":1610283499736,"results":"17","hashOfConfig":"11"},{"size":986,"mtime":1610275546191,"results":"18","hashOfConfig":"11"},{"size":942,"mtime":1610276765516,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1qv671o",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/index.js",[],["42","43"],"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/App.js",[],"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/reportWebVitals.js",[],"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/UserContext.js",[],"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/pages/home/index.js",["44"],"import React, { useContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../../UserContext';\nimport Navbar from '../../components/Navbar';\nimport RoomList from '../../components/RoomList';\nlet socket;\n\nconst Home = () => {\n  const BASE_URL = 'localhost:7000';\n  const { user, setUser } = useContext(UserContext);\n  const data = JSON.stringify(user);\n  const [room, setRoom] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    socket = io(BASE_URL);\n\n    socket.on('room-created', (room) => {\n      setRooms([...rooms, room]);\n    });\n\n    return () => {\n      socket.emit('disconnet');\n      socket.off();\n    };\n    // eslint-disable-next-line\n  }, [BASE_URL]);\n\n  useEffect(() => {\n    socket.on('output-rooms', (rooms) => {\n      setRooms(rooms);\n      setIsLoading(false);\n    });\n  }, [rooms]);\n\n  const setAsKepo = () => {\n    const kepo = {\n      name: 'Kepo',\n      email: 'kepo@dot.com',\n      password: '123',\n      id: '1',\n    };\n    setUser(kepo);\n  };\n\n  const setAsJohn = () => {\n    const john = {\n      name: 'John',\n      email: 'john@mail.com',\n      password: '123',\n      id: 2,\n    };\n\n    setUser(john);\n  };\n\n  const hendleSubmit = (e) => {\n    e.preventDefault();\n    socket.emit('create-room', room);\n    console.log(room);\n    setRoom('');\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 m7\">\n            <div className=\"card blue-grey darken-1\">\n              <div className=\"card-content white-text\">\n                <span className=\"card-title\">\n                  Welcome, {user ? user.name : ''}\n                </span>\n                <div className=\"row\">\n                  <form className=\"col s12\" onSubmit={hendleSubmit}>\n                    <div className=\"row\">\n                      <div className=\"input-field col s12\">\n                        <input\n                          placeholder=\"Enter a rooom name\"\n                          id=\"rooms\"\n                          type=\"text\"\n                          value={room}\n                          onChange={(e) => setRoom(e.target.value)}\n                          className=\"validate\"\n                        />\n                        <label htmlFor=\"rooms\">Rooms</label>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n              <div className=\"card-action\">\n                <Link to=\"/\" onClick={setAsJohn}>\n                  SET AS JHON\n                </Link>\n                <Link to=\"/\" onClick={setAsKepo}>\n                  SET AS KEPO\n                </Link>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s12 m5 offset-1\">\n            <RoomList rooms={rooms} isLoading={isLoading} />\n          </div>\n        </div>\n        {/* <h1>Home, {data}</h1>\n        <button onClick={setAsKepo}>Login as Kepo</button>\n        <button onClick={setAsJohn}>Login as John</button>\n        <Link to=\"/chat\">\n          <button>Go to chat</button>\n        </Link> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/pages/chat/index.js",["45","46"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UserContext } from '../../UserContext';\nimport Navbar from '../../components/Navbar';\nimport io from 'socket.io-client';\nimport Message from '../../components/Message';\nlet socket;\n\nconst Chat = () => {\n  const BASE_URL = 'localhost:7000';\n  const { roomId, roomName } = useParams();\n  // eslint-disable-next-line\n  const { user, setUser } = useContext(UserContext);\n  const [message, setMessage] = useState();\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket = io(BASE_URL);\n    if (user !== null) {\n      socket.emit('join', {\n        name: user.name,\n        room_id: roomId,\n        user_id: user.id,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    socket.emit('get-messages-history', roomId);\n    socket.on('output-messages', (messages) => {\n      setMessages(messages);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      console.log(message);\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', message, roomId, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  const data = JSON.stringify(user);\n  return (\n    <div>\n      <Navbar />\n      <Message data={messages} userId={data.id} />\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyPress={(e) => (e.key === 'Enter' ? sendMessage(e) : null)}\n        />\n        <button>Send Message</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n","/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/components/Navbar.js",[],"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/components/RoomList.js",[],"/Volumes/NGODING/04_NGODING/10_OPEN_SOURCE/simple-chat-app/client/src/components/Message.js",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":12,"column":9,"nodeType":"55","messageId":"56","endLine":12,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":11,"column":19,"nodeType":"55","messageId":"56","endLine":11,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":34,"column":6,"nodeType":"60","endLine":34,"endColumn":8,"suggestions":"61"},{"ruleId":"49","replacedBy":"62"},{"ruleId":"51","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'roomName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.","ArrayExpression",["66"],["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [roomId]",{"range":"69","text":"70"},[974,976],"[roomId]"]